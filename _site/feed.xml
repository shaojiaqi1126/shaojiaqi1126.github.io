<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>知秋客</title>
    <description>邵佳琪 Ideas &amp; Blogs</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 31 Mar 2016 11:00:23 +0800</pubDate>
    <lastBuildDate>Thu, 31 Mar 2016 11:00:23 +0800</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>京东设置自动打卡</title>
        <description>&lt;p&gt;当然作为员工来说，这样的做法可能不合乎公司的考核制度，但是因为一些特殊的原因，比如说请假临时给领导请假，这样的情况下，这些时候一个难题     &lt;strong&gt;不能正常的打卡&lt;/strong&gt; ，自动打卡也就应运而生。希望看到的同学不要滥用而使这一福利‘英年早逝’。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;安装谷歌浏览器&lt;/li&gt;
    &lt;li&gt;进入打卡界面&lt;/li&gt;
    &lt;li&gt;进入开发者模式&lt;/li&gt;
    &lt;li&gt;嵌入代码&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section&quot;&gt;谷歌浏览器&lt;/h3&gt;

&lt;p&gt;谷歌浏览器即&lt;code&gt;Chrome&lt;/code&gt;浏览器，&lt;strong&gt;百度搜索&lt;/strong&gt; 即可，安装完成打开。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;打卡界面&lt;/h3&gt;

&lt;p&gt;进入 &lt;code&gt;ERP&lt;/code&gt; 系统 ， 点击左侧 &lt;strong&gt;打卡&lt;/strong&gt; 弹出即打卡页面。
&lt;img src=&quot;http://blogimg.56fa1745c7549.d01.nanoyun.com/daka.png&quot; alt=&quot;打卡界面&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;开发者模式&lt;/h3&gt;

&lt;p&gt;进入打开界面，按&lt;code&gt;F12&lt;/code&gt;，即可进入开发者模式。&lt;code&gt;Ctrl+C&lt;/code&gt;复制下面一段代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; 
	&lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
	&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;digClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; 
	  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.hour&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;18&amp;quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.minute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;31&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;#clockIn&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.l-btn&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ps:这是一段很简单的js匿名函数，使用 &lt;strong&gt;setInterval&lt;/strong&gt; 方法。&lt;/p&gt;

&lt;p&gt;这段代码的作用是：每30000ms（根据修改可以修改），也就是30s的时间去判断一次，判断打卡界面的时间（上图中的“11：47”），是不是和我们设置的打卡时间一致，代码中“18”和“31”就是设置的打卡时间，如果有需求修改即可。&lt;/p&gt;

&lt;p&gt;####嵌入打卡代码&lt;/p&gt;

&lt;p&gt;上一步骤复制的代码，&lt;code&gt;Ctrl+V&lt;/code&gt;粘贴到开发者模式&lt;code&gt;F12&lt;/code&gt;已经打开的窗口，按 &lt;code&gt;Enter&lt;/code&gt;键即可。这样我们就把自动打卡就设置成功了，当然不放心的同学可以，尝试一下设置可以能立即执行打开的时间验证这段程序。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;还是那句话，我们不是为了逃避打卡而做了这样的程序，不应该过分滥用。
慎重！慎重！！慎重！！！ 
重要的事情说三遍。说三遍。说三遍。&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Mar 2016 00:00:00 +0800</pubDate>
        <link>/2016/03/29/%E4%BA%AC%E4%B8%9C%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1/</link>
        <guid isPermaLink="true">/2016/03/29/%E4%BA%AC%E4%B8%9C%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1/</guid>
        
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>Empty Template</title>
        <description>&lt;h2 id=&quot;empty-diary-template&quot;&gt;Empty diary template&lt;/h2&gt;

&lt;p&gt;Empty post template&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Dec 2015 00:00:00 +0800</pubDate>
        <link>/2015/12/28/empty-template/</link>
        <guid isPermaLink="true">/2015/12/28/empty-template/</guid>
        
        
        <category>paracraft</category>
        
      </item>
    
      <item>
        <title>Empty Template</title>
        <description>&lt;h2 id=&quot;empty-npl-tutorial-template&quot;&gt;Empty npl tutorial template&lt;/h2&gt;

&lt;p&gt;Empty post template&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Dec 2015 00:00:00 +0800</pubDate>
        <link>/2015/12/28/empty-template/</link>
        <guid isPermaLink="true">/2015/12/28/empty-template/</guid>
        
        
        <category>npl</category>
        
      </item>
    
      <item>
        <title>Empty Template</title>
        <description>&lt;h2 id=&quot;empty-diary-template&quot;&gt;Empty diary template&lt;/h2&gt;

&lt;p&gt;Empty post template&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Dec 2015 00:00:00 +0800</pubDate>
        <link>/2015/12/28/empty-template/</link>
        <guid isPermaLink="true">/2015/12/28/empty-template/</guid>
        
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>useful links</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#paracraft&quot; id=&quot;markdown-toc-paracraft&quot;&gt;ParaCraft&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#npl&quot; id=&quot;markdown-toc-npl&quot;&gt;NPL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;paracraft&quot;&gt;ParaCraft&lt;/h3&gt;
&lt;p&gt;http://www.paracraft.cn&lt;/p&gt;

&lt;h3 id=&quot;npl&quot;&gt;NPL&lt;/h3&gt;
&lt;p&gt;http://www.nplproject.com&lt;/p&gt;
</description>
        <pubDate>Sun, 27 Dec 2015 00:00:00 +0800</pubDate>
        <link>/2015/12/27/useful-links/</link>
        <guid isPermaLink="true">/2015/12/27/useful-links/</guid>
        
        
      </item>
    
      <item>
        <title>微信浏览器缓存问题</title>
        <description>&lt;p&gt;﻿—
layout: post
comments: false
categories: diary
—&lt;/p&gt;

&lt;p&gt;涉及缓存问题一般都是比较难处理的，当然这个只是浏览器的。&lt;/p&gt;

&lt;p&gt;###问题：微信公众账号开发，页面样式更新后，微信浏览器打开还是原来的样式&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;用pc网页访问是正常的，说明不是编码的问题，那就只能是缓存的问题了。既然找到问题所在就好办了，&lt;strong&gt;百度&lt;/strong&gt; 不过也没有找到好的解决方法。
微信浏览器是采用QQ浏览器的内核，可以在手动去清楚缓存，但是这对于用户来说不现实。
内置浏览器对html页面有相当严重缓存，而且还不能去清除它，这就像以前去做某单位项目的时候，必须要适应IE6的时候，通过改变url地址去清楚曲线解决问题。
我们可以在url跟上一个 &lt;code&gt;随机数&lt;/code&gt; 或者 &lt;code&gt;时间戳&lt;/code&gt; ，这样每次请求的时候就是新的url地址， 就不会出现缓存了。 当然在正式上线之后，不会在修改的时候，可以去掉上述。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Fri, 23 Oct 2015 00:00:00 +0800</pubDate>
        <link>/2015/10/23/%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98/</link>
        <guid isPermaLink="true">/2015/10/23/%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98/</guid>
        
        
      </item>
    
  </channel>
</rss>
